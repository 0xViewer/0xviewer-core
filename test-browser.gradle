/*
 * Copyright 2018 Hippo Seven
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: rootProject.file('test-js.gradle')

apply plugin: 'de.undercouch.download'

ext.chromiumPlatform = {
    String name = System.getProperty('os.name').toLowerCase()
    if (name.contains('linux') || name.contains('freebsd')) {
        return 'linux'
    } else if (name.contains('mac')) {
        return 'mac'
    } else if (name.contains('windows')) {
        if (System.getProperty('os.arch').contains('64')) {
            return 'win64'
        } else {
            return 'win32'
        }
    } else {
        throw new IllegalStateException("Unsupported platform: ${property('os.name')}")
    }
}

ext.chromiumUrl = [
        'linux': "https://storage.googleapis.com/chromium-browser-snapshots/Linux_x64/${chromium_revision}/chrome-linux.zip",
        'mac': "https://storage.googleapis.com/chromium-browser-snapshots/Mac/${chromium_revision}/chrome-mac.zip",
        'win32': "https://storage.googleapis.com/chromium-browser-snapshots/Win/${chromium_revision}/chrome-win32.zip",
        'win64': "https://storage.googleapis.com/chromium-browser-snapshots/Win_x64/${chromium_revision}/chrome-win32.zip",
][chromiumPlatform()]

ext.chromiumName = "chromium-${chromium_revision}-${chromiumPlatform()}"

ext.chromiumZip = "${rootProject.projectDir}/.gradle/chromium/${chromiumName}.zip"

ext.chromiumFolder = "${rootProject.projectDir}/.gradle/chromium/${chromiumName}"

ext.chromiumPath = [
        'linux': "${chromiumFolder}/chrome-linux/chrome",
        'mac': "${chromiumFolder}/chrome-mac/Chromium.app/Contents/MacOS/Chromium",
        'win32': "${chromiumFolder}/chrome-win32/chrome.exe",
        'win64': "${chromiumFolder}/chrome-win32/chrome.exe",
][chromiumPlatform()]

task downloadChromium(type: Download) {
    src chromiumUrl
    dest file(chromiumZip)
    overwrite false
}

task installChromium(type: Copy, dependsOn: downloadChromium) {
    from zipTree(chromiumZip)
    into file(chromiumFolder)
}

task installPuppeteer(type: YarnTask) {
    args = ['add', "puppeteer@${puppeteer_version}", '-D', '--ignore-scripts']
}

task installMochaHeadlessChrome(type: YarnTask, dependsOn: installPuppeteer) {
    args = ['add', "mocha@$mocha_version", "mocha-headless-chrome@$mocha_headless_chrome_version", '-D']
}

task copyBrowserTestHtml(type: Copy) {
    from "$rootProject.projectDir"
    into "$buildDir"
    include 'test-browser.html.template'
    rename { file -> 'test-browser.html' }
    expand(scripts: browserScripts)
    // UP-TO-DATE checker doesn't work fine here, force this task to run
    outputs.upToDateWhen { false }
}

// TODO ANSI color doesn't work in idea run-test console, but it should work.
task runBrowserTest(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules, installChromium, installMochaHeadlessChrome, copyBrowserTestHtml]) {
    script = file('node_modules/mocha-headless-chrome/bin/start')
    args = ['-f', 'build/test-browser.html', '-e', "${chromiumPath}"]
}

test.dependsOn runBrowserTest
